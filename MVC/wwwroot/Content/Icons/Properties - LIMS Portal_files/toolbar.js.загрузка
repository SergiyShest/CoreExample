_onTreeListInit_alreadyCalled = false;
function onTreeListInit(tree, evt) {
    AddAdjustmentDelegate(adjustTreeList);
    if (!_onTreeListInit_alreadyCalled) {
        updateToolbarButtonsState();
        _onTreeListInit_alreadyCalled = true;
    }
}
function adjustTreeList() {
    TreeList.AdjustControl();
}
function updateToolbarButtonsState() {
	var nodeKey = TreeList.GetFocusedNodeKey();
	var enabled = nodeKey !== null && nodeKey !== '';
	pageToolbar.GetItemByName("Edit").SetEnabled(enabled);
	pageToolbar.GetItemByName("btCommentSample").SetEnabled(enabled);
	pageToolbar.GetItemByName("btAttachedFiles").SetEnabled(enabled);

    //canDeleteNode(TreeList, nodeKey);
}
function onPageToolbarItemClick(s, e) {
    var nodeKey = TreeList.GetFocusedNodeKey();
	switch (e.item.name) {

		case "btCommentSample":
            comment(nodeKey);
            break;
		case "btAttachedFiles":
			AttachedFiles(nodeKey);
			break;
		case "ToExport":
			ExportSettings(nodeKey);
			break;
		case "New":
			New(nodeKey);
			break;
		case "NewRoot":
			New(null);
			break;
        case "Edit":
	          Edit(); 
			break;
		case "ClearCache":
			ClearCache();
			break;
        case "Delete":
			// todo: show confirm popup
            if (window.confirm('Are sure to delete this node?')) {
                TreeList.DeleteNode(nodeKey);
			}


            break;
    }
}




function onFocusedNodeChanged(s, e) {
    updateToolbarButtonsState();
}

//function canDeleteNode(tree, nodeKey) {
//    var nodeState = tree.GetNodeState(nodeKey);
//    if (nodeState !== 'Child') {
//        pageToolbar.GetItemByName("Delete").SetEnabled(false);
//        return;
//    }
//    tree.GetNodeValues(nodeKey,
//        'ParentId',
//        function (parentId) {
//            pageToolbar.GetItemByName("Delete").SetEnabled(parentId != null);
//        });
//    return;
//}